// <auto-generated />
using System;
using CMS_Backend.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS_Backend.Persistence.Migrations
{
    [DbContext(typeof(ColleageManagementDbContext))]
    [Migration("20221014184847_edit-staff-nullability")]
    partial class editstaffnullability
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CMS_BackEnd.Domain.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StaffId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9219),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9220),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9219),
                            Name = "KG1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9218)
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9223),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9223),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9222),
                            Name = "KG2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9221)
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9225),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9226),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9225),
                            Name = "KG3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9224)
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9228),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9229),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9228),
                            Name = "Level 1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9227)
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9231),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9231),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9230),
                            Name = "Level 2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9230)
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9233),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9234),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9233),
                            Name = "Level 3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9232)
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9236),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9236),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9235),
                            Name = "Level 4",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9235)
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9239),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9239),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9238),
                            Name = "Level 5",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9238)
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9241),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9242),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9241),
                            Name = "Level 6",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9240)
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9244),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9244),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9243),
                            Name = "Level 7",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9243)
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9246),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9247),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9246),
                            Name = "Level 8",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9245)
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 3,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9249),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9249),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9248),
                            Name = "Music",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9248)
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9252),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9252),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9251),
                            Name = "German A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9251)
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9254),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9255),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9254),
                            Name = "German A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9253)
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9258),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9258),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9257),
                            Name = "German B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9256)
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9260),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9261),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9260),
                            Name = "German B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9259)
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9263),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9263),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9262),
                            Name = "German C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9262)
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9265),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9266),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9265),
                            Name = "German C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9264)
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9268),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9268),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9267),
                            Name = "German Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9267)
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9270),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9271),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9270),
                            Name = "Turkish A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9269)
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9273),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9273),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9272),
                            Name = "Turkish A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9272)
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9276),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9276),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9275),
                            Name = "Turkish B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9275)
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9278),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9279),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9278),
                            Name = "Turkish B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9277)
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9281),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9281),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9280),
                            Name = "Turkish C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9280)
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9283),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9284),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9283),
                            Name = "Turkish C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9282)
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9286),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9286),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9285),
                            Name = "Turkish Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9285)
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9289),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9289),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9288),
                            Name = "Arabic A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9288)
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9299),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9299),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9298),
                            Name = "Arabic A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9298)
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9301),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9302),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9301),
                            Name = "Arabic B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9300)
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9304),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9305),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9304),
                            Name = "French A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9303)
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9307),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9307),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9306),
                            Name = "French A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9306)
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9309),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9310),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9309),
                            Name = "French B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9308)
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9312),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9312),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9311),
                            Name = "French B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9311)
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9314),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9315),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9314),
                            Name = "French C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9313)
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9317),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9317),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9316),
                            Name = "French C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9316)
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9319),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9320),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9319),
                            Name = "English A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9318)
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9322),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9322),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9321),
                            Name = "English A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9321)
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9325),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9326),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9325),
                            Name = "English B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9324)
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9328),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9328),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9327),
                            Name = "English B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9327)
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9330),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9331),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9330),
                            Name = "English C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9329)
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9333),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9333),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9332),
                            Name = "English C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9332)
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9335),
                            EndDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9336),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9335),
                            Name = "English Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(9334)
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.EducationClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationClass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(8942),
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(8943),
                            Name = "Kindergarten"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(8945),
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(8946),
                            Name = "Program support"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(8947),
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(8947),
                            Name = "Music "
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(8948),
                            ModificationDate = new DateTime(2022, 10, 14, 21, 48, 46, 894, DateTimeKind.Local).AddTicks(8949),
                            Name = "Languages"
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("OutcomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OverTimePerHour")
                        .HasColumnType("float");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("TotalDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SalaryTemplates");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SessionYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionYears");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("ClassLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");

                    b.HasDiscriminator<string>("Discriminator").HasValue("StudentCourse");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.HasBaseType("CMS_BackEnd.Domain.StudentCourse");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("IncomeTransaction");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Staff");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.EducationClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Class");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany("Loans")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
