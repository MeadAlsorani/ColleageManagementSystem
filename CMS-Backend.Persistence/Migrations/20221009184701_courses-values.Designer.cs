// <auto-generated />
using System;
using CMS_Backend.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS_Backend.Persistence.Migrations
{
    [DbContext(typeof(ColleageManagementDbContext))]
    [Migration("20221009184701_courses-values")]
    partial class coursesvalues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CMS_BackEnd.Domain.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StaffId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6355),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6356),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6354),
                            Name = "KG1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6354)
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6358),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6359),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6358),
                            Name = "KG2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6357)
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6361),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6362),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6361),
                            Name = "KG3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6360)
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6364),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6364),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6363),
                            Name = "Level 1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6363)
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6367),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6367),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6367),
                            Name = "Level 2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6366)
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6370),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6370),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6369),
                            Name = "Level 3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6369)
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6372),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6373),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6372),
                            Name = "Level 4",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6371)
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6375),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6375),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6374),
                            Name = "Level 5",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6374)
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6377),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6378),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6377),
                            Name = "Level 6",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6376)
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6380),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6380),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6379),
                            Name = "Level 7",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6379)
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6382),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6383),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6382),
                            Name = "Level 8",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6382)
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 3,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6385),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6385),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6384),
                            Name = "Music",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6384)
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6387),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6388),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6387),
                            Name = "German A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6386)
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6390),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6390),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6389),
                            Name = "German A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6389)
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6392),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6393),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6392),
                            Name = "German B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6391)
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6395),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6396),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6395),
                            Name = "German B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6394)
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6398),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6399),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6397),
                            Name = "German C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6397)
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6401),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6402),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6401),
                            Name = "German C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6400)
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6404),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6404),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6403),
                            Name = "German Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6403)
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6406),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6407),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6406),
                            Name = "Turkish A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6405)
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6409),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6409),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6408),
                            Name = "Turkish A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6408)
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6411),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6412),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6411),
                            Name = "Turkish B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6410)
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6414),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6414),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6413),
                            Name = "Turkish B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6413)
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6417),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6417),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6416),
                            Name = "Turkish C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6416)
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6419),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6420),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6419),
                            Name = "Turkish C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6418)
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6422),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6422),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6421),
                            Name = "Turkish Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6421)
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6424),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6425),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6424),
                            Name = "Arabic A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6423)
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6427),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6427),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6426),
                            Name = "Arabic A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6426)
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6429),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6430),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6429),
                            Name = "Arabic B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6428)
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6432),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6433),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6431),
                            Name = "French A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6431)
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6436),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6436),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6435),
                            Name = "French A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6435)
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6440),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6440),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6439),
                            Name = "French B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6439)
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6442),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6443),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6442),
                            Name = "French B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6442)
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6445),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6446),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6445),
                            Name = "French C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6444)
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6450),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6451),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6449),
                            Name = "French C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6448)
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6454),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6455),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6453),
                            Name = "English A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6452)
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6457),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6457),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6456),
                            Name = "English A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6456)
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6459),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6460),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6459),
                            Name = "English B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6458)
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6462),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6462),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6461),
                            Name = "English B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6461)
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6464),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6465),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6464),
                            Name = "English C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6463)
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6467),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6467),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6466),
                            Name = "English C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6466)
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6469),
                            EndDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6470),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6469),
                            Name = "English Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6468)
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.EducationClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationClass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6113),
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6113),
                            Name = "Kindergarten"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6115),
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6116),
                            Name = "Program support"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6123),
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6124),
                            Name = "Music "
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6125),
                            ModificationDate = new DateTime(2022, 10, 9, 21, 47, 0, 776, DateTimeKind.Local).AddTicks(6125),
                            Name = "Languages"
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("OutcomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OverTimePerHour")
                        .HasColumnType("float");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("TotalDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SalaryTemplates");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SessionYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionYears");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("ClassLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");

                    b.HasDiscriminator<string>("Discriminator").HasValue("StudentCourse");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.HasBaseType("CMS_BackEnd.Domain.StudentCourse");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("IncomeTransaction");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Staff");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.EducationClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Class");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany("Loans")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
