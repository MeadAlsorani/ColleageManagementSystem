// <auto-generated />
using System;
using CMS_Backend.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS_Backend.Persistence.Migrations
{
    [DbContext(typeof(ColleageManagementDbContext))]
    [Migration("20221030200003_Student_NationalId")]
    partial class Student_NationalId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CMS_BackEnd.Domain.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StaffId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2774),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2774),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2773),
                            Name = "KG1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2773)
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2777),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2778),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2777),
                            Name = "KG2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2776)
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2780),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2780),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2779),
                            Name = "KG3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2779)
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2782),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2783),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2782),
                            Name = "Level 1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2781)
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2785),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2785),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2784),
                            Name = "Level 2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2784)
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2787),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2788),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2787),
                            Name = "Level 3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2786)
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2790),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2790),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2790),
                            Name = "Level 4",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2789)
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2793),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2794),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2793),
                            Name = "Level 5",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2792)
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2796),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2796),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2795),
                            Name = "Level 6",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2795)
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2799),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2799),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2798),
                            Name = "Level 7",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2797)
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2802),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2802),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2802),
                            Name = "Level 8",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2801)
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 3,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2805),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2806),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2805),
                            Name = "Music",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2804)
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2808),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2808),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2807),
                            Name = "German A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2807)
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2810),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2810),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2810),
                            Name = "German A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2809)
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2813),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2813),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2812),
                            Name = "German B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2812)
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2815),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2816),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2815),
                            Name = "German B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2814)
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2818),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2818),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2817),
                            Name = "German C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2817)
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2820),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2821),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2820),
                            Name = "German C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2819)
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2823),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2823),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2822),
                            Name = "German Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2822)
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2826),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2827),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2826),
                            Name = "Turkish A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2825)
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2829),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2829),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2828),
                            Name = "Turkish A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2828)
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2831),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2832),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2831),
                            Name = "Turkish B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2830)
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2834),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2834),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2833),
                            Name = "Turkish B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2833)
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2836),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2837),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2836),
                            Name = "Turkish C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2835)
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2839),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2839),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2838),
                            Name = "Turkish C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2838)
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2841),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2842),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2841),
                            Name = "Turkish Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2840)
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2844),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2844),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2843),
                            Name = "Arabic A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2843)
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2846),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2847),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2846),
                            Name = "Arabic A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2845)
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2849),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2849),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2848),
                            Name = "Arabic B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2848)
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2851),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2852),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2851),
                            Name = "French A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2850)
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2854),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2854),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2853),
                            Name = "French A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2853)
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2856),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2857),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2856),
                            Name = "French B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2855)
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2859),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2859),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2858),
                            Name = "French B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2858)
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2861),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2862),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2861),
                            Name = "French C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2860)
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2864),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2864),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2863),
                            Name = "French C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2863)
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2868),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2868),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2867),
                            Name = "English A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2867)
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2870),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2871),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2870),
                            Name = "English A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2869)
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2873),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2873),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2872),
                            Name = "English B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2872)
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2875),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2876),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2875),
                            Name = "English B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2874)
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2878),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2878),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2877),
                            Name = "English C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2877)
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2881),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2881),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2880),
                            Name = "English C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2880)
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2883),
                            EndDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2884),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2883),
                            Name = "English Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2882)
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.EducationClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationClass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2545),
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2546),
                            Name = "Kindergarten"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2548),
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2549),
                            Name = "Program support"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2550),
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2551),
                            Name = "Music "
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2552),
                            ModificationDate = new DateTime(2022, 10, 30, 23, 0, 3, 630, DateTimeKind.Local).AddTicks(2552),
                            Name = "Languages"
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("IncomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalaryTemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalaryTemplateId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("OutcomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BasicSalary")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("SalaryPerHour")
                        .HasColumnType("float");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("TotalDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("SalaryTemplates");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SessionYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionYears");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("ClassLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Staff");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.EducationClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Class");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.SalaryTemplate", "SalaryTemplate")
                        .WithMany("Loans")
                        .HasForeignKey("SalaryTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalaryTemplate");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
