// <auto-generated />
using System;
using CMS_Backend.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS_Backend.Persistence.Migrations
{
    [DbContext(typeof(ColleageManagementDbContext))]
    [Migration("20221030231823_Student_CoursesContent_Attendance_Description")]
    partial class Student_CoursesContent_Attendance_Description
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CMS_BackEnd.Domain.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StaffId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4276),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4276),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4275),
                            Name = "KG1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4275)
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4286),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4287),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4286),
                            Name = "KG2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4285)
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4289),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4289),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4288),
                            Name = "KG3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4288)
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4291),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4292),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4291),
                            Name = "Level 1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4291)
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4294),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4294),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4293),
                            Name = "Level 2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4293)
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4297),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4297),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4296),
                            Name = "Level 3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4296)
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4300),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4301),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4300),
                            Name = "Level 4",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4299)
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4303),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4303),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4302),
                            Name = "Level 5",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4302)
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4305),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4306),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4305),
                            Name = "Level 6",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4305)
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4308),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4308),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4307),
                            Name = "Level 7",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4307)
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4310),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4311),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4310),
                            Name = "Level 8",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4310)
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 3,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4313),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4313),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4313),
                            Name = "Music",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4312)
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4316),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4316),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4315),
                            Name = "German A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4315)
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4319),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4320),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4319),
                            Name = "German A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4318)
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4322),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4322),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4321),
                            Name = "German B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4321)
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4324),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4325),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4324),
                            Name = "German B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4323)
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4327),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4327),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4326),
                            Name = "German C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4326)
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4329),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4330),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4329),
                            Name = "German C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4328)
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4332),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4332),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4331),
                            Name = "German Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4331)
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4334),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4335),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4334),
                            Name = "Turkish A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4333)
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4337),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4337),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4336),
                            Name = "Turkish A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4336)
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4339),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4340),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4339),
                            Name = "Turkish B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4338)
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4342),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4342),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4341),
                            Name = "Turkish B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4341)
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4344),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4345),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4344),
                            Name = "Turkish C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4343)
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4347),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4347),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4346),
                            Name = "Turkish C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4346)
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4349),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4351),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4349),
                            Name = "Turkish Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4349)
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4353),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4353),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4352),
                            Name = "Arabic A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4352)
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4355),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4356),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4355),
                            Name = "Arabic A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4354)
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4358),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4358),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4357),
                            Name = "Arabic B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4357)
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4360),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4360),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4360),
                            Name = "French A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4359)
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4363),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4363),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4362),
                            Name = "French A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4362)
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4365),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4365),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4365),
                            Name = "French B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4364)
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4368),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4368),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4367),
                            Name = "French B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4367)
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4370),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4370),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4370),
                            Name = "French C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4369)
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4372),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4373),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4372),
                            Name = "French C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4372)
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4375),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4375),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4375),
                            Name = "English A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4374)
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4378),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4378),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4377),
                            Name = "English A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4377)
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4380),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4381),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4380),
                            Name = "English B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4379)
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4383),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4383),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4382),
                            Name = "English B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4382)
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4385),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4386),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4385),
                            Name = "English C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4384)
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4388),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4388),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4387),
                            Name = "English C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4387)
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4390),
                            EndDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4391),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4390),
                            Name = "English Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4389)
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.EducationClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationClass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4009),
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4010),
                            Name = "Kindergarten"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4012),
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4012),
                            Name = "Program support"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4014),
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4014),
                            Name = "Music "
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4015),
                            ModificationDate = new DateTime(2022, 10, 31, 2, 18, 22, 909, DateTimeKind.Local).AddTicks(4016),
                            Name = "Languages"
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("IncomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalaryTemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalaryTemplateId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("OutcomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BasicSalary")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("SalaryPerHour")
                        .HasColumnType("float");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("TotalDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("SalaryTemplates");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SessionYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionYears");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("ClassLevel")
                        .HasColumnType("int");

                    b.Property<string>("CoursesContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Staff");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.EducationClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Class");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.SalaryTemplate", "SalaryTemplate")
                        .WithMany("Loans")
                        .HasForeignKey("SalaryTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalaryTemplate");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
