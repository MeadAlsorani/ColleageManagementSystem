// <auto-generated />
using System;
using CMS_Backend.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS_Backend.Persistence.Migrations
{
    [DbContext(typeof(ColleageManagementDbContext))]
    [Migration("20221015162253_modify-salary-tamplate")]
    partial class modifysalarytamplate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CMS_BackEnd.Domain.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StaffId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6891),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6892),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6891),
                            Name = "KG1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6890)
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6901),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6901),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6900),
                            Name = "KG2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6900)
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6903),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6904),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6903),
                            Name = "KG3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6902)
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6907),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6907),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6907),
                            Name = "Level 1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6906)
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6910),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6911),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6910),
                            Name = "Level 2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6909)
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6913),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6913),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6912),
                            Name = "Level 3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6912)
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6916),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6916),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6915),
                            Name = "Level 4",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6914)
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6918),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6918),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6918),
                            Name = "Level 5",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6917)
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6921),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6921),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6920),
                            Name = "Level 6",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6920)
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6923),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6924),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6923),
                            Name = "Level 7",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6922)
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6926),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6926),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6925),
                            Name = "Level 8",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6925)
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 3,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6928),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6929),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6928),
                            Name = "Music",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6927)
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6931),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6931),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6930),
                            Name = "German A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6930)
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6933),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6934),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6933),
                            Name = "German A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6932)
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6936),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6936),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6935),
                            Name = "German B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6935)
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6938),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6939),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6938),
                            Name = "German B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6937)
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6941),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6941),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6940),
                            Name = "German C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6940)
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6946),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6947),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6946),
                            Name = "German C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6945)
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6949),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6949),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6948),
                            Name = "German Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6948)
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6951),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6952),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6951),
                            Name = "Turkish A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6950)
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6954),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6954),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6953),
                            Name = "Turkish A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6953)
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6956),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6957),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6956),
                            Name = "Turkish B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6955)
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6959),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6959),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6958),
                            Name = "Turkish B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6958)
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6961),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6962),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6961),
                            Name = "Turkish C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6960)
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6964),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6964),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6963),
                            Name = "Turkish C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6963)
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6966),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6967),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6966),
                            Name = "Turkish Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6965)
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6969),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6969),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6968),
                            Name = "Arabic A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6968)
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6971),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6972),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6971),
                            Name = "Arabic A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6970)
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6974),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6974),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6973),
                            Name = "Arabic B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6973)
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6977),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6977),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6977),
                            Name = "French A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6975)
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6979),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6980),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6979),
                            Name = "French A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6979)
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6982),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6982),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6981),
                            Name = "French B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6981)
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6984),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6985),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6984),
                            Name = "French B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6983)
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6987),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6987),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6986),
                            Name = "French C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6986)
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6989),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6990),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6989),
                            Name = "French C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6989)
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6992),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6992),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6991),
                            Name = "English A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6991)
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6994),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6995),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6994),
                            Name = "English A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6993)
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6997),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6997),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6996),
                            Name = "English B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6996)
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6999),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7000),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6999),
                            Name = "English B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6998)
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7002),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7002),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7001),
                            Name = "English C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7001)
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7004),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7005),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7004),
                            Name = "English C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7003)
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7007),
                            EndDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7007),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7006),
                            Name = "English Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(7006)
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.EducationClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationClass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6640),
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6641),
                            Name = "Kindergarten"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6643),
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6644),
                            Name = "Program support"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6645),
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6645),
                            Name = "Music "
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6647),
                            ModificationDate = new DateTime(2022, 10, 15, 19, 22, 52, 905, DateTimeKind.Local).AddTicks(6647),
                            Name = "Languages"
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("IncomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("OutcomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BasicSalary")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("SalaryPerHour")
                        .HasColumnType("float");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("TotalDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SalaryTemplates");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SessionYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionYears");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("ClassLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Staff");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.EducationClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Class");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany("Loans")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
