// <auto-generated />
using System;
using CMS_Backend.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS_Backend.Persistence.Migrations
{
    [DbContext(typeof(ColleageManagementDbContext))]
    partial class ColleageManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CMS_BackEnd.Domain.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StaffId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(83),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(84),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(82),
                            Name = "KG1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(82)
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(87),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(88),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(86),
                            Name = "KG2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(86)
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(91),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(91),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(90),
                            Name = "KG3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(89)
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(94),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(95),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(94),
                            Name = "Level 1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(93)
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(98),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(98),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(97),
                            Name = "Level 2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(96)
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(101),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(101),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(100),
                            Name = "Level 3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(100)
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(5987),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(5988),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(5986),
                            Name = "Level 4",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(5975)
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6007),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6008),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6006),
                            Name = "Level 5",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6006)
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6011),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6012),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6011),
                            Name = "Level 6",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6010)
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6016),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6016),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6015),
                            Name = "Level 7",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6014)
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6020),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6021),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6019),
                            Name = "Level 8",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6018)
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 3,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6024),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6024),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6023),
                            Name = "Music",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6022)
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6027),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6028),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6027),
                            Name = "German A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6026)
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6031),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6032),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6030),
                            Name = "German A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6030)
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6035),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6035),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6034),
                            Name = "German B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6033)
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6039),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6039),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6038),
                            Name = "German B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6037)
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6043),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6044),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6042),
                            Name = "German C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6041)
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6047),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6047),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6046),
                            Name = "German C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6045)
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6051),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6052),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6050),
                            Name = "German Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6049)
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6055),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6056),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6055),
                            Name = "Turkish A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6054)
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6059),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6059),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6058),
                            Name = "Turkish A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6058)
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6062),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6063),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6062),
                            Name = "Turkish B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6061)
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6066),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6067),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6066),
                            Name = "Turkish B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6065)
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6070),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6071),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6069),
                            Name = "Turkish C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6069)
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6074),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6075),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6074),
                            Name = "Turkish C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6073)
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6078),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6079),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6078),
                            Name = "Turkish Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6077)
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6083),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6084),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6082),
                            Name = "Arabic A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6081)
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6087),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6088),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6087),
                            Name = "Arabic A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6086)
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6092),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6093),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6091),
                            Name = "Arabic B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6091)
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6096),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6096),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6095),
                            Name = "French A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6094)
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6100),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6100),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6099),
                            Name = "French A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6098)
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6104),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6104),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6103),
                            Name = "French B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6102)
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6107),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6108),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6106),
                            Name = "French B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6106)
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6111),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6111),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6110),
                            Name = "French C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6109)
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6116),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6116),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6114),
                            Name = "French C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6113)
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6119),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6120),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6118),
                            Name = "English A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6118)
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6123),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6124),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6122),
                            Name = "English A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6122)
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6127),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6128),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6126),
                            Name = "English B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6126)
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6131),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6132),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6130),
                            Name = "English B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6130)
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6135),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6135),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6134),
                            Name = "English C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6133)
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6138),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6139),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6138),
                            Name = "English C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6137)
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6142),
                            EndDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6143),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6141),
                            Name = "English Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 15, 14, 41, 20, 484, DateTimeKind.Local).AddTicks(6141)
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.EducationClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationClass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 483, DateTimeKind.Local).AddTicks(9628),
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 483, DateTimeKind.Local).AddTicks(9629),
                            Name = "Kindergarten"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 483, DateTimeKind.Local).AddTicks(9636),
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 483, DateTimeKind.Local).AddTicks(9637),
                            Name = "Program support"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 483, DateTimeKind.Local).AddTicks(9638),
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 483, DateTimeKind.Local).AddTicks(9639),
                            Name = "Music "
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 10, 15, 14, 41, 20, 483, DateTimeKind.Local).AddTicks(9640),
                            ModificationDate = new DateTime(2022, 10, 15, 14, 41, 20, 483, DateTimeKind.Local).AddTicks(9641),
                            Name = "Languages"
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("IncomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("OutcomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OverTimePerHour")
                        .HasColumnType("float");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("TotalDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SalaryTemplates");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SessionYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionYears");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("ClassLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Staff");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.EducationClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Class");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany("Loans")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
