// <auto-generated />
using System;
using CMS_Backend.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS_Backend.Persistence.Migrations
{
    [DbContext(typeof(ColleageManagementDbContext))]
    partial class ColleageManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CMS_BackEnd.Domain.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StaffId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6490),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6490),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6489),
                            Name = "KG1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6488)
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6494),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6494),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6493),
                            Name = "KG2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6493)
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6497),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6498),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6497),
                            Name = "KG3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6496)
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6501),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6502),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6500),
                            Name = "Level 1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6500)
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6506),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6506),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6505),
                            Name = "Level 2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6504)
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6508),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6508),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6508),
                            Name = "Level 3",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6507)
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6510),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6511),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6510),
                            Name = "Level 4",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6510)
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6514),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6514),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6513),
                            Name = "Level 5",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6513)
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6516),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6516),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6516),
                            Name = "Level 6",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6515)
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6519),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6519),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6518),
                            Name = "Level 7",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6518)
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 2,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6521),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6521),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6520),
                            Name = "Level 8",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6520)
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 3,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6523),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6524),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6523),
                            Name = "Music",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6523)
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6526),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6526),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6526),
                            Name = "German A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6525)
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6529),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6530),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6529),
                            Name = "German A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6528)
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6532),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6532),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6531),
                            Name = "German B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6531)
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6534),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6535),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6534),
                            Name = "German B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6534)
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6537),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6538),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6537),
                            Name = "German C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6536)
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6540),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6540),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6539),
                            Name = "German C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6539)
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6542),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6543),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6542),
                            Name = "German Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6541)
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6545),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6545),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6544),
                            Name = "Turkish A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6544)
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6549),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6549),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6548),
                            Name = "Turkish A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6548)
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6551),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6552),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6551),
                            Name = "Turkish B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6550)
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6554),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6554),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6553),
                            Name = "Turkish B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6553)
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6556),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6557),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6556),
                            Name = "Turkish C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6555)
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6559),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6559),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6558),
                            Name = "Turkish C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6558)
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6561),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6561),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6561),
                            Name = "Turkish Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6560)
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6564),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6565),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6564),
                            Name = "Arabic A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6563)
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6567),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6567),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6566),
                            Name = "Arabic A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6566)
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6570),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6570),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6569),
                            Name = "Arabic B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6569)
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6572),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6573),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6572),
                            Name = "French A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6571)
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6575),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6575),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6574),
                            Name = "French A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6574)
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6577),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6577),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6577),
                            Name = "French B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6576)
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6580),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6580),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6579),
                            Name = "French B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6579)
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6582),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6583),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6582),
                            Name = "French C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6581)
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6585),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6585),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6584),
                            Name = "French C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6584)
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6587),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6588),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6587),
                            Name = "English A1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6586)
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6590),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6590),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6589),
                            Name = "English A2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6589)
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6599),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6600),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6599),
                            Name = "English B1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6598)
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6602),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6602),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6601),
                            Name = "English B2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6601)
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6604),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6605),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6604),
                            Name = "English C1",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6603)
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6607),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6607),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6606),
                            Name = "English C2",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6606)
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6609),
                            EndDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6610),
                            LessonDuration = 0,
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6609),
                            Name = "English Conversation Course",
                            Price = 0,
                            StartDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6608)
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.EducationClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationClass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6271),
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6272),
                            Name = "Kindergarten"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6273),
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6274),
                            Name = "Program support"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6275),
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6276),
                            Name = "Music "
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6277),
                            ModificationDate = new DateTime(2022, 10, 16, 2, 52, 35, 270, DateTimeKind.Local).AddTicks(6279),
                            Name = "Languages"
                        });
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("IncomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalaryTemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalaryTemplateId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("OutcomeTransactions");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BasicSalary")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("SalaryPerHour")
                        .HasColumnType("float");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("TotalDuration")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("SalaryTemplates");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SessionYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionYears");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<int>("ClassLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Attendance", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Staff");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.EducationClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Class");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.IncomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Loan", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.SalaryTemplate", "SalaryTemplate")
                        .WithMany("Loans")
                        .HasForeignKey("SalaryTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalaryTemplate");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.OutcomeTransaction", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.StudentCourse", b =>
                {
                    b.HasOne("CMS_BackEnd.Domain.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_BackEnd.Domain.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.SalaryTemplate", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("CMS_BackEnd.Domain.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
